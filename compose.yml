version: "3"

services:

  # The `proxy` service set up two entrypoints (read that as
  # "listeners") for traefik, one on port 80 and one on port 9090.
  proxy:
    image: traefik:latest
    command:
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.ep1.address=:80
      - --entrypoints.ep2.address=:9090

    # We need to publish ports 80 and 9090. Here I'm also
    # publishing port 8080, which is the Traefik dashboard, but
    # that's not necessary.
    ports:
      - "80:80"
      - "8080:8080"
      - "9090:9090"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # We bind container `app1` to both entrypoints `ep1` and `ep2`, with a `Host`
  # rule matching `example.com`. The launch script launches two darkhttpd
  # processes that listen on ports 8080 and 9090.
  app1:
    image: docker.io/alpinelinux/darkhttpd:latest
    volumes:
      - type: bind
        source: www80
        target: /var/www/localhost/htdocs
      - type: bind
        source: www9090
        target: /var/www/localhost/htdocs9090
      - type: bind
        source: launcher
        target: /var/www/localhost/launcher
    labels:
      - traefik.enable=true
      - traefik.http.services.app1.loadbalancer.server.port=8080
      - traefik.http.routers.app1.rule=Host(`example.com`)
      - traefik.http.routers.app1.entrypoints=ep1
      - traefik.http.services.app2.loadbalancer.server.port=9090
      - traefik.http.routers.app2.rule=Host(`example.com`)
      - traefik.http.routers.app2.entrypoints=ep2
    entrypoint: /var/www/localhost/launcher/launch.sh
